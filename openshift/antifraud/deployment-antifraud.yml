kind: Deployment
apiVersion: apps/v1
metadata:
  name: antifraud
  labels:
    app: antifraud
    app.kubernetes.io/part-of: istio
spec:
  replicas: ${{REPLICAS_COUNT_APP}}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: antifraud
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: 'true'
        sidecar.istio.io/proxyLimitsCPU: 200m
        sidecar.istio.io/proxyLimitsMemory: 256Mi
        sidecar.istio.io/proxyRequestsCPU: 200m
        sidecar.istio.io/proxyRequestsMemory: 256Mi
      labels:
        app: antifraud
    spec:
      containers:
        - name: antifraud
          image: ${registryUrl}/${registryProject}/${imageNameWithDigest}
          env:
            - name: NODE_NAME       #добавление имени ноды в переменные среды пода
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAMESPACE    #добавление имени неймспейса в переменные среды пода
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME        #добавление имени пода в переменные среды пода
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODEID
              value: antifraud
            - name: RUN_DEBUG
              value: 'false'
            - name: JVM_OPTION
              valueFrom:
                configMapKeyRef:
                  name: cm-antifraud-app-properties
                  key: jvm-arguments
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8000
              name: tcp-debug
          envFrom:
            - configMapRef:
                name: cm-antifraud-app-properties
          volumeMounts:
            - name: app-config
              mountPath: /deployments/config
              readOnly: true
            - name: logback-config
              mountPath: /deployments/config/logback
              readOnly: true
            - name: logsshare
              mountPath: /app/logs
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/readiness
              port: 8080
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
            initialDelaySeconds: 80
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/liveness
              port: 8080
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
            initialDelaySeconds: 80
          resources:
            limits:
              cpu: ${LIMIT_CPU}
              memory: ${LIMIT_MEMORY}
            requests:
              cpu: ${REQUEST_CPU}
              memory: ${REQUEST_MEMORY}
        - name: fluentbit
          image: ${FLUENTBIT_IMAGE}
          resources:
            limits:
              cpu: ${fluentBitLimitCPU}
              memory: ${fluentBitLimitMemory}
            requests:
              cpu: ${fluentBitRequestCPU}
              memory: ${fluentBitRequestMemory}
          env:
            - name: service
              value: antifraud
            - name: cluster
              value: ${fluentBitEnvCluster}
            - name: moduleId
              value: antifraud
            - name: moduleVersion
              value: latest
            - name: nodeId
              value: antifraud
            - name: standId
              value: ${fluentBitEnvStandId}
            - name: zoneId
              value: ${fluentBitEnvZoneId}
            - name: pod
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: namespace
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: logsshare
              mountPath: /app/logs
            - mountPath: /fluent-bit/etc
              name: cm-ds-fluentbit
              readOnly: true
      volumes:
        - name: app-config
          configMap:
            name: cm-antifraud-app-properties
            items:
              - key: application.properties
                path: application.properties
        - name: logback-config
          configMap:
            name: cm-antifraud-logback
            items:
              - key: logback.xml
                path: logback.xml
        - name: cm-ds-fluentbit
          configMap:
            defaultMode: 420
            name: cm-ds-fluentbit
        - name: logsshare
          emptyDir: {}
