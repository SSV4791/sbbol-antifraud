server.port=8080
server.shutdown=graceful

spring.datasource.url=jdbc:postgresql://127.0.0.1:5434/postgres
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=password

standin.datasource.url=jdbc:postgresql://127.0.0.1:5435/postgres
standin.datasource.driverClassName=org.postgresql.Driver
standin.datasource.username=postgres
standin.datasource.password=password

fpis.endpoint=http://fmaas-ift-adapter-oz.ingress.apps.dev-gen2.ca.sbrf.ru/asfm/v1.0/pprb_bhb_hist_b2b_aful/notify

logging.config=classpath:logging/logback.xml

spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=jcache

spring.main.banner-mode=off
spring.application.name=antifraud
spring.liquibase.enabled=false

server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true
server.servlet.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8

# all endpoints are enabled by default
management.endpoints.enabled-by-default=true
management.endpoints.web.base-path=/antifraud/actuator
# only health and prometheus are available as web endpoints
management.endpoints.web.exposure.include=health,prometheus
# all endpoints are available through jmx
management.endpoints.jmx.exposure.include=*
# enable liveness and readiness health endpoints
management.endpoint.health.probes.enabled=true
# always show details and components in health endpoint response
management.endpoint.health.show-details=always
# application name for metrics
management.metrics.tags.application=antifraud
# export metrics to prometheus
management.metrics.export.prometheus.enabled=true

# StandIn plugin
standin.plugin.configuration.replicationStrategy=STANDIN_LOCKS
standin.plugin.configuration.serializerType=BINARY_KRYO
standin.plugin.configuration.partitionLockMode=NONE
standin.plugin.configuration.partitionMultiplyingMode=FORBIDDEN
standin.plugin.configuration.orderingControlStrategy=IDEMPOTENT_ORDERING_CONTROL

# Application Journal
appjournal.moduleId=pprb4-digital-fraud
standin.cloud.client.zoneId=FRAUD
standin.cloud.client.kafka.bootstrapServers=localhost
standin.cloud.client.mmtProxyUrl=localhost
standin.cloud.client.mmtCallTimeout=30
standin.cloud.client.heartBeatPeriod=1000
standin.cloud.client.subscriptionKafkaConcurrency=5
standin.cloud.client.groupId=group_1
standin.cloud.client.kafka-retry=3
standin.cloud.client.retry-timeout=600000
standin.cloud.client.kafka.producerConfig."[security.protocol]"=SSL
standin.cloud.client.kafka.producerConfig."[ssl.keystore.location]"=/opt/keystore/kafka/server.keystore.jks
standin.cloud.client.kafka.producerConfig."[ssl.truststore.location]"=/opt/keystore/kafka/trust.jks
standin.cloud.client.kafka.producerConfig."[ssl.keystore.type]"=JKS
standin.cloud.client.kafka.producerConfig."[ssl.truststore.type]"=JKS
standin.cloud.client.kafka.producerConfig."[ssl.protocol]"=TLS
standin.cloud.client.kafka.producerConfig."[ssl.enabled.protocols]"=TLSv1.2
standin.cloud.client.kafka.producerConfig."[ssl.endpoint.identification.algorithm]"=
standin.cloud.client.kafka.consumerConfig."[security.protocol]"=SSL
standin.cloud.client.kafka.consumerConfig."[ssl.keystore.location]"=/opt/keystore/kafka/server.keystore.jks
standin.cloud.client.kafka.consumerConfig."[ssl.truststore.location]"=/opt/keystore/kafka/trust.jks
standin.cloud.client.kafka.consumerConfig."[ssl.keystore.type]"=JKS
standin.cloud.client.kafka.consumerConfig."[ssl.truststore.type]"=JKS
standin.cloud.client.kafka.consumerConfig."[ssl.protocol]"=TLS
standin.cloud.client.kafka.consumerConfig."[ssl.enabled.protocols]"=TLSv1.2
standin.cloud.client.kafka.consumerConfig."[ssl.endpoint.identification.algorithm]"=

# autogenerated health-check example
health.http.endpoint[test_url].url=http://ya.ru
