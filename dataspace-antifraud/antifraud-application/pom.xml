<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>dataspace-antifraud</artifactId>
        <groupId>ru.sberbank.pprb.sbbol.antifraud</groupId>
        <version>0.1.0-build.25</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>antifraud-application</artifactId>
    <version>0.1.0-build.25</version>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>ru.sberbank.pprb.sbbol.antifraud</groupId>
            <artifactId>antifraud-api</artifactId>
            <version>0.1.0-build.25</version>
        </dependency>
        <dependency>
            <groupId>ru.sberbank.pprb.sbbol.antifraud</groupId>
            <artifactId>antifraud-service</artifactId>
            <version>0.1.0-build.25</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.ws</groupId>
            <artifactId>jaxws-rt</artifactId>
            <version>2.3.3</version>
        </dependency>
        <!--Для интеграции с ТС Журналирование. Json формат логов-->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>6.3</version>
        </dependency>
        <!-- Зависимости Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <!--Для тестов-->
        <dependency>
            <groupId>sbp.com.sbt.dataspace</groupId>
            <artifactId>dataspace-core-local-runner</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>sbp.com.sbt.dataspace</groupId>
            <artifactId>liquibase-deployer</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <scope>test</scope>
        </dependency>

        <!--Swagger-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
            <scope>test</scope>
        </dependency>

        <!-- Coverage -->
        <dependency>
            <groupId>ru.dcbqa.allureee.annotations</groupId>
            <artifactId>dcb-allure-annotations</artifactId>
            <version>1.1.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ru.dcbqa.swagger.coverage.reporter</groupId>
            <artifactId>swagger-coverage-reporter</artifactId>
            <version>2.2.1</version>
            <scope>test</scope>
        </dependency>

        <!-- PACT -->
        <dependency>
            <groupId>au.com.dius.pact.consumer</groupId>
            <artifactId>junit5</artifactId>
            <version>4.1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>au.com.dius.pact.consumer</groupId>
            <artifactId>java8</artifactId>
            <version>4.1.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- инициализация root.dir -->
            <plugin>
                <groupId>org.commonjava.maven.plugins</groupId>
                <artifactId>directory-maven-plugin</artifactId>
                <version>0.3</version>
                <executions>
                    <execution>
                        <id>dir</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>highest-basedir</goal>
                        </goals>
                        <configuration>
                            <property>root.dir</property>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- копирование файла с настройками для локального запуска dataspace-core с фильтрацией плейсхолдеров -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-properties</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/src/test/resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${root.dir}/config/standalone</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- резервирует порт для локального запуска dataspace-core-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.10</version>
                <executions>
                    <execution>
                        <id>reserve-dataspace-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <portNames>
                                <portName>local.core.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- перекладывает необходимые файлы и зависимости для локального запуска dataspace-core-->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-core</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>sbp.com.sbt.dataspace</groupId>
                                    <artifactId>dataspace-core-module</artifactId>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/local-core</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-model</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>ru.sberbank.pprb.sbbol.antifraud</groupId>
                                    <artifactId>antifraud-model-jpa</artifactId>
                                    <version>${project.version}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>ru.sberbank.pprb.sbbol.antifraud</groupId>
                                    <artifactId>antifraud-model-sdk</artifactId>
                                    <version>${project.version}</version>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/local-core/resources</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>report-aggregate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>ru.sbrf.build.gradle.qa.reporter</groupId>
                <artifactId>qa-maven-plugin</artifactId>
                <version>2.0.0</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <id>generate-swagger</id>
                        <goals>
                            <goal>generate-swagger</goal>
                        </goals>
                        <configuration>
                            <locations>ru.sberbank.pprb.sbbol.antifraud</locations>
                            <swaggerDirectory>../.qa/coverage/api/</swaggerDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>api-coverage</id>
                        <goals>
                            <goal>swagger-coverage</goal>
                        </goals>
                        <configuration>
                            <name>api</name>
                            <swaggerPath>../.qa/coverage/api/swagger.json</swaggerPath>
                            <resultsPattern>../**/tests-coverage-result/*.json</resultsPattern>
                            <resultsPattern>target/restassured-coverage-report/**/tests-coverage-result/*.json</resultsPattern>
                            <workDir>../.qa/coverage</workDir>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pact-coverage</id>
                        <goals>
                            <goal>swagger-coverage</goal>
                        </goals>
                        <configuration>
                            <name>pact</name>
                            <swaggerPath>../.qa/coverage/api/swagger.json</swaggerPath>
                            <resultsPattern>target/pact-coverage-report/**/tests-coverage-result/*.json</resultsPattern>
                            <workDir>../.qa/coverage</workDir>
                        </configuration>
                    </execution>
                    <execution>
                        <id>upload</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>qa-portal-upload</goal>
                        </goals>
                        <configuration>
                            <projectKey>sbbol-antifraud</projectKey>
                            <jacocoXml>target/site/jacoco-aggregate/jacoco.xml</jacocoXml>
                            <jacocoHtml>target/site/jacoco-aggregate</jacocoHtml>
                            <apiHtml>../.qa/coverage/api/result/html</apiHtml>
                            <apiJson>../.qa/coverage/api/result/report.json</apiJson>
                            <execInfo>../.qa/executedTests.log</execInfo>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>sonar</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.0.0-M5</version>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <configuration>
                            <output>file</output>
                            <append>true</append>
                        </configuration>
                        <executions>
                            <execution>
                                <id>report-aggregate</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>report-aggregate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>