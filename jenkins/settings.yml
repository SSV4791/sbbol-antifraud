docker:
  images:
    java: docker-internal.registry-ci.delta.sbrf.ru/ci02281165/ci03069386/bellsoft/liberica-openjdk-rhel7.7-205:15.0.2-10
    postgres: docker-internal.registry-ci.delta.sbrf.ru/ci02281165/ci03069386/postgres:13-alpine

credentials:
  service: TUZ_DCBMSC5
  sonar: sonar-token
  checkmarx: TUZ_00170030-sast
  openshift_token: os-token
  nexus_token: antifraud-nexus3-token
  registry_delta: tuz-antifraud-delta

project_name: antifraud
allure_project_id: '37'

liquibase:
  changelog:
    path: antifraud-application/src/main/resources/db/changelog/changelog.yaml
  defaults_file:
    path: jenkins/liquibase/liquibase.properties

pr_check:
  vector:
    compare:
      release_uri: 'https://nexus-ci.delta.sbrf.ru/repository/maven-distr/CI02473994/CI03045533/D-02.005.00_0001/CI03045533-D-02.005.00_0001-distrib.zip'
    workdir: vectors
    match:
      files:
        - 'antifraud-service/src/main/java/ru/sberbank/pprb/sbbol/antifraud/service/entity'
        - 'antifraud-application/src/test/java/ru/sberbank/pprb/sbbol/antifraud/changevector'
    command: >-
      ./gradlew
      -PtokenName=${env.TOKEN_NAME}
      -PtokenPassword=${env.TOKEN_PASSWORD}
      -Dgradle.wrapperUser=${env.TOKEN_NAME}
      -Dgradle.wrapperPassword=${env.TOKEN_PASSWORD}
      -Dtest.results.enabled=true
      -Dtest-layer=unit
      applyVectorTest --info
  liquibase:
    match:
      files:
        - 'buildSrc/'
        - 'antifraud-application/src/main/resources/db/changelog'
        - 'jenkins/liquibase/liquibase.properties'
  openshift:
    workdir: openshift
    match:
      files:
        - 'buildSrc/'
        - 'openshift/'
        - 'jenkins/resources/openshift/'
    url_api: https://api.dev-terra000006-idm.ocp.delta.sbrf.ru:6443
    namespace: ci02281165-antifraud
  build_gradle:
    match:
      files:
        - 'buildSrc/'
        - 'antifraud-application/'
        - 'antifraud-api/'
        - 'antifraud-rpc-api/'
        - 'antifraud-service/'
        - 'build.gradle.kts'
        - 'gradle.properties'
        - 'settings.gradle.kts'
    cpu: 2
    memory: '6g'
    command: >-
      ./gradlew
      -PtokenName=${env.TOKEN_NAME}
      -PtokenPassword=${env.TOKEN_PASSWORD}
      -Dgradle.wrapperUser=${env.TOKEN_NAME}
      -Dgradle.wrapperPassword=${env.TOKEN_PASSWORD}
      clean build -x test
  test:
    match:
      files:
        - 'buildSrc/'
        - 'antifraud-application/'
        - 'antifraud-api/'
        - 'antifraud-rpc-api/'
        - 'antifraud-service/'
        - 'build.gradle.kts'
        - 'gradle.properties'
        - 'settings.gradle.kts'
        - 'jenkins/settings.yml'
    cpu: 2
    memory: '6g'
    command: >-
      ./gradlew
      -PtokenName=${env.TOKEN_NAME}
      -PtokenPassword=${env.TOKEN_PASSWORD}
      -Dgradle.wrapperUser=${env.TOKEN_NAME}
      -Dgradle.wrapperPassword=${env.TOKEN_PASSWORD}
      -Dsonar.login=${env.SONAR_TOKEN}
      -Dsonar.host.url=https://sbt-sonarqube.sigma.sbrf.ru/
      -Dsonar.projectKey=ru.sberbank.pprb.sbbol.antifraud
      -Dsonar.projectVersion=${pullRequest.fromRef.displayId}
      -Dsonar.pullrequest.key=${params.pullRequestId}
      -Dsonar.pullrequest.branch=${pullRequest.fromRef.displayId}
      -Dsonar.pullrequest.base=${pullRequest.toRef.displayId}
      -Dtest.results.enabled=true
      -Dtest-layer=unit,api,web,configuration
      -Dpactbroker.url=${env.PACT_BROKER_URL}
      -Dbuild.link=${env.BUILD_URL}
      -Dbuild.type=prCheck
      qaReporterUpload sonarCoverage --info

release:
  version_pattern: '02\.005\.\d{2}_\d{4}'
  version_init: 02.005.00_0000
  repository: maven-distr-dev  # необходим для releasePipe для выкачки предсобранных артефатов
  artifact_id: CI03045533
  group_id: CI02473994
  docker_dev: docker-dev.registry-ci.delta.sbrf.ru
  docker_prom: docker-release.registry-ci.delta.sbrf.ru
  image_name: 'CI02473994/CI03045533/antifraud'
  doc_path: 'docs/build/docs'
  params_folder: antifraud
  qgm:
    repository: maven-distr
  build_gradle:
    cpu: 2
    memory: '6g'
    command: >-
      ./gradlew
      -PtokenName=${env.TOKEN_NAME}
      -PtokenPassword=${env.TOKEN_PASSWORD}
      -Dgradle.wrapperUser=${env.TOKEN_NAME}
      -Dgradle.wrapperPassword=${env.TOKEN_PASSWORD}
      -Pversion=${env.VERSION}
      -Dbuild.link=${env.BUILD_URL}
      -Dbuild.type=release
      build -x test generateVectorTest --parallel --info
  run_backend_tests: true
  test:
    allure_dir: build/allure-results
    email_list: fmpisarev@sberbank.ru
    backend:
      command: >-
        ./gradlew
        -PtokenName=${env.TOKEN_NAME}
        -PtokenPassword=${env.TOKEN_PASSWORD}
        -Dgradle.wrapperUser=${env.TOKEN_NAME}
        -Dgradle.wrapperPassword=${env.TOKEN_PASSWORD}
        -Pversion=${env.VERSION}
        -Dtest-layer=unit,api,web,configuration,cdcConsumer,cdcProvider
        -Dpactbroker.url=${env.PACT_BROKER_URL}
        -Dpactbroker.auth.username=${env.PACT_USER}
        -Dpactbroker.auth.password='${env.PACT_PASSWORD}'
        -Dpact.pacticipant.version=${env.VERSION}
        -Dpact.pacticipant.tag=${params.branch}
        -Dpactbroker.consumerversionselectors.tags=antifraud:${params.branch}
        -Dbuild.link=${env.BUILD_URL}
        -Dbuild.type=release
        -Dsonar.login=${env.SONAR_TOKEN}
        -Dsonar.host.url=https://sbt-sonarqube.sigma.sbrf.ru/
        -Dsonar.projectKey=ru.sberbank.pprb.sbbol.antifraud
        -Dsonar.branch.name=${params.branch}
        build qaReporterUpload sonarCoverage --parallel --info
  jobs:
    test_release:
      wait: false
  default_values:
    type: release
    checkmarx: true
    params_folder: release/02.004.00
    istio_tag: '2.4'
